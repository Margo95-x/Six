const TelegramBot = require('node-telegram-bot-api');

// –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
const BOT_TOKEN = process.env.BOT_TOKEN;
const RUSSIAN_GROUP_URL = process.env.RUSSIAN_GROUP_URL || 'https://t.me/russian_group';
const ENGLISH_GROUP_URL = process.env.ENGLISH_GROUP_URL || 'https://t.me/english_group';

console.log('=== –ü–†–û–°–¢–û–ô –ë–û–¢ ===');
console.log('BOT_TOKEN:', BOT_TOKEN ? '—É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω' : '–ù–ï –£–°–¢–ê–ù–û–í–õ–ï–ù');

if (!BOT_TOKEN) {
    console.error('‚ùå BOT_TOKEN –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω!');
    process.exit(1);
}

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–æ—Ç–∞ (—Ç–æ–ª—å–∫–æ polling, –±–µ–∑ webhook)
const bot = new TelegramBot(BOT_TOKEN, { polling: true });

console.log('‚úÖ –ë–æ—Ç –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω');

// –ö–æ–º–∞–Ω–¥–∞ —Å—Ç–∞—Ä—Ç - –µ–¥–∏–Ω—Å—Ç–≤–µ–Ω–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è
bot.onText(/\/start/, async (msg) => {
    const chatId = msg.chat.id;
    
    console.log(`[START] –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å ${msg.from.first_name} (${msg.from.id}) –∑–∞–ø—É—Å—Ç–∏–ª –±–æ—Ç–∞`);
    
    const keyboard = {
        inline_keyboard: [[
            { text: '–†—É—Å—Å–∫–∏–π', url: RUSSIAN_GROUP_URL },
            { text: 'English', url: ENGLISH_GROUP_URL }
        ]]
    };
    
    try {
        await bot.sendMessage(chatId, '–í—ã–±–µ—Ä–∏—Ç–µ —è–∑—ã–∫:', { 
            reply_markup: keyboard 
        });
        console.log(`[SUCCESS] –ö–Ω–æ–ø–∫–∏ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é ${msg.from.id}`);
    } catch (error) {
        console.error(`[ERROR] –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –∫–Ω–æ–ø–æ–∫:`, error.message);
    }
});

// –ò–≥–Ω–æ—Ä–∏—Ä—É–µ–º –≤—Å–µ –æ—Å—Ç–∞–ª—å–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è
bot.on('message', (msg) => {
    if (!msg.text?.startsWith('/start')) {
        // –ü—Ä–æ—Å—Ç–æ –∏–≥–Ω–æ—Ä–∏—Ä—É–µ–º, –Ω–µ –æ—Ç–≤–µ—á–∞–µ–º
        return;
    }
});

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫
bot.on('error', (error) => {
    console.error('[BOT ERROR]', error.message);
});

bot.on('polling_error', (error) => {
    console.error('[POLLING ERROR]', error.message);
    
    if (error.message.includes('401')) {
        console.error('‚ùå –ù–ï–ü–†–ê–í–ò–õ–¨–ù–´–ô –¢–û–ö–ï–ù –ë–û–¢–ê! –ü—Ä–æ–≤–µ—Ä—å—Ç–µ BOT_TOKEN');
    }
    if (error.message.includes('409')) {
        console.error('‚ùå –ë–û–¢ –£–ñ–ï –ó–ê–ü–£–©–ï–ù –í –î–†–£–ì–û–ú –ú–ï–°–¢–ï!');
    }
});

// –ü—Ä–æ—Å—Ç–µ–π—à–∏–π HTTP —Å–µ—Ä–≤–µ—Ä –¥–ª—è Render
const http = require('http');
const PORT = process.env.PORT || 3000;

const server = http.createServer((req, res) => {
    if (req.url === '/') {
        res.writeHead(200, { 'Content-Type': 'text/html; charset=utf-8' });
        res.end(`
            <h1>–ü—Ä–æ—Å—Ç–æ–π Telegram –ë–æ—Ç</h1>
            <p>‚úÖ –ë–æ—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç</p>
            <p>ü§ñ –¢–æ–∫–µ–Ω: ${BOT_TOKEN ? '—É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω' : '–ù–ï –£–°–¢–ê–ù–û–í–õ–ï–ù'}</p>
            <p>üá∑üá∫ –†—É—Å—Å–∫–∞—è –≥—Ä—É–ø–ø–∞: ${RUSSIAN_GROUP_URL}</p>
            <p>üá¨üáß –ê–Ω–≥–ª–∏–π—Å–∫–∞—è –≥—Ä—É–ø–ø–∞: ${ENGLISH_GROUP_URL}</p>
            <p>üìù –§—É–Ω–∫—Ü–∏—è: –ü—Ä–∏ /start –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç 2 –∫–Ω–æ–ø–∫–∏</p>
            <p>üöÄ –°—Ç–∞—Ç—É—Å: ${BOT_TOKEN ? '–ì–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ' : '–û—à–∏–±–∫–∞ —Ç–æ–∫–µ–Ω–∞'}</p>
        `);
    } else {
        res.writeHead(404);
        res.end('Not Found');
    }
});

server.listen(PORT, () => {
    console.log(`üöÄ HTTP —Å–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω –Ω–∞ –ø–æ—Ä—Ç—É ${PORT}`);
    console.log(`üåê –û—Ç–∫—Ä–æ–π—Ç–µ: http://localhost:${PORT}`);
    console.log('=== –ë–û–¢ –ì–û–¢–û–í ===');
});

// Graceful shutdown
process.on('SIGINT', () => {
    console.log('\nüí§ –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –±–æ—Ç–∞...');
    bot.stopPolling();
    server.close(() => {
        console.log('‚úÖ –ë–æ—Ç –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω');
        process.exit(0);
    });
});
